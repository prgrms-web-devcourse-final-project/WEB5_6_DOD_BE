server:
  port: 80

spring:
  datasource:
    url: ${sm://db-url}
    username: ${sm://db-username}
    password: ${sm://db-password}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: true
  docker:
    compose:
      lifecycle-management: start-only
  data:
    redis:
      host: ${sm://redis-host}
      port: ${sm://redis-port}
      username: default
      password: ${sm://redis-password}
      ssl:
        enabled: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            client-id: ${sm://google-client-id}
            client-secret: ${sm://google-client-secret}
            redirect-uri: ${sm://gcp-ip}+"/login/oauth2/code/{registrationId}" # SM 붙이기
            authorization-grant-type: authorization_code
            scope:
              - openid
              - email
              - profile
          kakao:
            client-name: kakao
            client-id: ${sm://kakao-client-id}
            client-secret: ${sm://kakao-client-secret}
            redirect-uri: ${sm://gcp-ip}+"/login/oauth2/code/{registrationId}" # SM 붙이기
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
springdoc:
  pathsToMatch: /api/**
jwt:
  expiration: 604800000
  refresh-expiration: 704800000
  secret: ${sm://jwt-secret}
google:
  calendar:
    client-id: ${sm://google-client-id}
    client-secret: ${sm://google-client-secret}
    redirect-uri: ${sm://gcp-ip}+"/oauth2/callback/google-calendar" # SM 붙이기
  api:
    key: ${sm://google-api-key}
zoom:
  client-id: ${sm://zoom-client-id}
  client-secret: ${sm://zoom-client-secret}
  redirect-uri: ${sm://zoom-redirect-uri}
  refresh-token: ${sm://zoom-refresh-token}
kakao:
  middle-location:
    api-key: ${sm://kakao-api-key}
logging:
  level:
    org.springframework.cloud.gcp.secretmanager: DEBUG
    root: info
    org:
      hibernate:
        SQL: info
        type:
          descriptor:
            sql: info

url:
#  backend: https://api.ittaeok.com # SM 붙이기
  backend: ${sm://gcp-ip} # SM 붙이기
front-server:
#  domain-A: https://ittaeok.com # SM 붙이기
  domain-A: ${sm://front-domain-A} # SM 붙이기
#  domain-B: https://www.ittaeok.com # SM 붙이기
  domain-B: ${sm://front-domain-B} # SM 붙이기
#  redirect-url: https://ittaeok.com/auth/callback # SM 붙이기
  redirect-url: ${sm://front-callback} # SM 붙이기
