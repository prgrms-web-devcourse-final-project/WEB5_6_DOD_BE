name: Deploy to GCP

on:
  pull_request:
    types: [closed]
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

        # 테스트 실행 (테스트 코드 완성 시 주석 해제)
        # - name: Run tests
        #   run: ./gradlew test

      - name: Build with Gradle
        run: |
          echo "Building commit: ${{ github.sha }}"
          echo "Building from repository: ${{ github.repository }}"
          ./gradlew clean bootjar -Pprofile=prod

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:dev-${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify build completion
        run: |
          echo "Build completed successfully!"
          echo "Image digest: ${{ steps.build.outputs.digest }}"
          echo "Pushed tags:"
          echo "  - ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest"
          echo "  - ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}"
          echo "  - ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:dev-${{ github.run_number }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:

      - name: Deploy to GCP Instance
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd $HOME/project
            
            sudo docker-compose down || true
            
            sudo docker image prune -f
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/ittaeok-gcp:latest || true
            sudo docker system prune -f || true
            
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/ittaeok-gcp:latest --disable-content-trust
            
            sudo docker-compose up -d
            
            sudo docker-compose ps
            
            sleep 10
            sudo docker-compose logs --tail=20
            
            echo "=== Deployed Image Info ==="
            sudo docker images | grep ittaeok-gcp
            
            echo "=== Container Info ==="
            sudo docker ps | grep ittaeok

      - name: Deployment completed
        run: |
          echo "Deployment completed successfully"
          echo "Deployed commit: ${{ github.sha }}"
          echo "Repository: ${{ github.repository }}"